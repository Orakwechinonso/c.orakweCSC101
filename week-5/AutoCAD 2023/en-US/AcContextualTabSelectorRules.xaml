<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright 2013 by Autodesk, Inc.  All rights reserved.
    
    This computer source code and related instructions and comments 
    are the unpublished confidential and proprietary information of 
    Autodesk, Inc. and are protected under applicable copyright and 
    trade secret law.  They may not be disclosed to, copied or used 
    by any third party without the prior written consent of Autodesk, Inc.
-->
<!-- Defines tab selector rules.

Custom applications can supply their own rules by creating <RDS>ContextualTabSelectorRules.xaml file
and placing it the same directory where the main exe is located. RDS (registered developer symbol) should
be used to avoid name conflicts. Rules will show up the CUI dialog and can be referenced in the (partial) CUI 
file of the custom application.

Any valid C# boolean expression can be used.

Note that rules can be redefined by custom application: simply use the same Uid and make sure that your rule
file has >0 Ordering attribute.
-->
    
    
<!-- Theme design for Rules
    
    If it is an annotation object: Theme - Purple
    Anything to do with Blocks: Theme - Yellow
    Anything to do with underlays or references (except blocks): Theme - Cyan
    Text editor and other command modes not relating to Blocks: Theme - Blue
    Other geometry: Theme - Green
    
    Matt Stein: 11/4/08
    -->
    
<TabSelectorRules  
    xmlns="clr-namespace:Autodesk.AutoCAD.Ribbon;assembly=AcWindows"
    Ordering="0"
    >
<!--
    Use AssemblyReference elements to reference custom assemblies.
    <TabSelectorRules.References>
        <AssemblyReference Namespace="Corp.Addin" Assembly="corpAddin"/>
    </TabSelectorRules.References>
-->
    
    <Rule Uid="AcArcSelected" DisplayName="Arc selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Arc")
        ]]>
    </Rule>

    <Rule Uid="AcAttributeDefinitionSelected" DisplayName="Attribute selected" Theme="Yellow" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("AttributeDefinition")
        ]]>
    </Rule>

    <Rule Uid="AcBlockEditorInProgress" DisplayName="Block editor mode" Activate="True" Theme="Yellow" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["BLOCKEDITOR"].Value) == 1
        ]]>
    </Rule>

    <Rule Uid="AcBlockSelected" DisplayName="Block selected" Theme="Yellow" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("BlockReference") && Selection.CommonProperties["ClassName"].GetValue().Equals("")
        ]]>
    </Rule>

    <Rule Uid="AcBodySelected" DisplayName="Body selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Body")
        ]]>
    </Rule>
    
    <Rule Uid="AcCameraSelected" DisplayName="Camera selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Camera")
        ]]>
    </Rule>

    <Rule Uid="AcCircleSelected" DisplayName="Circle selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Circle")
        ]]>
    </Rule>
    
    <!-- Dimension Rules -->
    <Rule Uid="AcAlignedDimensionSelected" DisplayName="Dimension, Aligned selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("AlignedDimension")
        ]]>
    </Rule>
    <Rule Uid="Ac3PointAngularDimensionSelected" DisplayName="Dimension, 3 Point Angular selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Point3AngularDimension")
        ]]>
    </Rule>
    <Rule Uid="AcAngularDimensionSelected" DisplayName="Dimension, Angular selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("LineAngularDimension2")
        ]]>
    </Rule>
    <Rule Uid="AcArcDimensionSelected" DisplayName="Dimension, Arc selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("ArcDimension")
        ]]>
    </Rule>
    <Rule Uid="AcDiametricDimensionSelected" DisplayName="Dimension, Diametric selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("DiametricDimension")
        ]]>
    </Rule>
    <Rule Uid="AcJoggedDimensionSelected" DisplayName="Dimension, Jogged selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("RadialDimensionLarge")
        ]]>
    </Rule>
    <Rule Uid="AcRadialDimensionSelected" DisplayName="Dimension, Radial selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("RadialDimension")
        ]]>
    </Rule>
    <Rule Uid="AcRotatedDimensionSelected" DisplayName="Dimension, Rotated selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("RotatedDimension")
        ]]>
    </Rule>
    <!-- End Dimension Rules -->

    <Rule Uid="AcDgnUnderlaySelected" DisplayName="DGN Underlay selected" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("DgnReference")
        ]]>
    </Rule>

    <Rule Uid="AcDwfUnderlaySelected" DisplayName="DWF Underlay selected" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("DwfReference")
        ]]>
    </Rule>

    <Rule Uid="AcEllipseSelected" DisplayName="Ellipse selected" Theme="Green" Trigger="Selection">
        <![CDATA[ 
            Selection.ContainsOnly("Ellipse")
        ]]>
    </Rule>
    
    <Rule Uid="AcXrefSelected" DisplayName="External Reference selected" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("BlockReference") &&
                    (bool)(((System.ComponentModel.ICustomTypeDescriptor)(Selection[0].GetProperties()["BlockTableRecord"].GetValue(Selection[0]))).GetProperties()["IsFromExternalReference"].GetValue(Selection[0].GetProperties()["BlockTableRecord"].GetValue(Selection[0]))) &&
                    Selection[0].GetProperties()["IsComparedReference"] != null &&
                    !((bool)(Selection[0].GetProperties()["IsComparedReference"].GetValue(Selection[0]))) &&
                     ((short)SystemVariables["TRACEMODE"].Value) == 0 
        ]]>
    </Rule>

    <Rule Uid="AcHelixSelected" DisplayName="Helix selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Helix")
        ]]>
    </Rule>

    <!-- Hatch and Gradient -->
    <Rule Uid="AcHatchCreation" DisplayName="Hatch creation" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["HATCHCREATION"].Value) == 1
        ]]>
    </Rule>

    <Rule Uid="AcGradientSelected" DisplayName="Gradient selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            false
        ]]>
    </Rule>

    <Rule Uid="AcHatchSelected" DisplayName="Hatch selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            Selection.Count >= 1 && Selection.ContainsOnly("Hatch") &&
            ((short)SystemVariables["HATCHCREATION"].Value) == 0 &&
            !Selection.isContainSectionViewHatch()
        ]]>
    </Rule>

    <Rule Uid="AcHatchSelected_SV" DisplayName="Hatch of Section View selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            Selection.Count >= 1 && Selection.ContainsOnly("Hatch") &&
            ((short)SystemVariables["HATCHCREATION"].Value) == 0 &&
            Selection.isOnlySectionViewHatchs()
        ]]>
    </Rule>

    <Rule Uid="AcSolidFillHatchSelected" DisplayName="Hatch - Solid Fill selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            false
        ]]>
    </Rule>

    <!--<Rule Uid="AcMultipleHatchTypesSelected" DisplayName="Hatch (multiple types)" Trigger="Selection">
        <![CDATA[
            Selection.Count > 1 && Selection.ContainsOnly("Hatch") &&
            (bool)Selection.CommonProperties["IsSolidFill"].GetValue() == False &&
            (bool)Selection.CommonProperties["IsHatch"].GetValue() == False &&
            (bool)Selection.CommonProperties["IsGradient"].GetValue() == False
        ]]>
    </Rule>-->
    <!-- End Hatch and Gradient -->
    
    <Rule Uid="AcRasterImageSelected" DisplayName="Image selected" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("RasterImage")
        ]]>
    </Rule>

    <Rule Uid="AcLeadersSelected" DisplayName="Leader selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Leader")
        ]]>
    </Rule>

    <Rule Uid="AcLineSelected" DisplayName="Line selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Line")
        ]]>
    </Rule>

    <Rule Uid="AcPointLightsSelected" DisplayName="Lights - Point selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Lights") &&
            (Autodesk.AutoCAD.GraphicsInterface.DrawableType)(Selection.CommonProperties["LightType"].GetValue()) == Autodesk.AutoCAD.GraphicsInterface.DrawableType.PointLight
        ]]>
    </Rule>

    <Rule Uid="AcSpotLightsSelected" DisplayName="Lights - Spot selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Lights") &&
            (Autodesk.AutoCAD.GraphicsInterface.DrawableType)(Selection.CommonProperties["LightType"].GetValue()) == Autodesk.AutoCAD.GraphicsInterface.DrawableType.SpotLight
        ]]>
    </Rule>

    <!-- Begin Organic Modeling -->
    <Rule Uid="AcSmoothMeshSelected" DisplayName="Mesh (smooth) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("SubDMesh")
        ]]>
    </Rule>

    <Rule Uid="AcSmoothMeshFaceSubentitySelected" DisplayName="Mesh Subentity with Faces (smooth) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.Count > 0 &&
        Selection.CommonProperties["ParentType"] != null &&
        ((System.Type)Selection.CommonProperties["ParentType"].GetValue()).Name == "SubDMesh" && Selection.ContainsAny("FaceSubEntity")
        ]]>
    </Rule>

    <Rule Uid="AcSmoothMeshCreaseSubentitySelected" DisplayName="Mesh Subentity without Faces (smooth) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.Count > 0 &&
        Selection.CommonProperties["ParentType"] != null &&
        ((System.Type)Selection.CommonProperties["ParentType"].GetValue()).Name == "SubDMesh" && Selection.ContainsAny("FaceSubEntity") == false
        ]]>
    </Rule>
    <!-- End Organic Modeling -->

    <!-- Multileaders -->
    <Rule Uid="AcOneBlockMLeaderSelected" DisplayName="Multileader - Block selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("MLeader") && 
        (Autodesk.AutoCAD.DatabaseServices.ContentType)Selection.CommonProperties["ContentType"].GetValue(null) == Autodesk.AutoCAD.DatabaseServices.ContentType.BlockContent
        ]]>
    </Rule>
    
    <Rule Uid="AcOneTextMLeaderSelected" DisplayName="Multileader - Text selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("MLeader") &&
        (Autodesk.AutoCAD.DatabaseServices.ContentType)Selection.CommonProperties["ContentType"].GetValue(null) == Autodesk.AutoCAD.DatabaseServices.ContentType.MTextContent
        ]]>
    </Rule>
    
    <Rule Uid="AcMInsertBlockSelected" DisplayName="Multiple Insert Block selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("MInsertBlock")
        ]]>
    </Rule>

    <!-- Need to talk to Albert about this one-->
    <!--<Rule Uid="AcBlockandTextMLeaderSelected" DisplayName="Block and text multileader">
        <![CDATA[
        ]]>
    </Rule>-->
    <!-- End Multileaders -->
    
    <Rule Uid="AcPdfUnderlaySelected" DisplayName="PDF Underlay selected" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("PdfReference")
        ]]>
    </Rule>
    
    <Rule Uid="AcPolyfaceMeshSelected" DisplayName="Polyface Mesh selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("PolyFaceMesh")
        ]]>
    </Rule>

    <Rule Uid="AcPolygonMeshSelected" DisplayName="Polygon Mesh selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("PolygonMesh")
        ]]>
    </Rule>

    <Rule Uid="AcPointSelected" DisplayName="Point selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("DBPoint")
        ]]>
    </Rule>

    <Rule Uid="AcPolylineSelected" DisplayName="Polyline selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Polyline")
        ]]>
    </Rule>

    <Rule Uid="Ac3DPolylineSelected" DisplayName="Polyline (3D) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Polyline3d")
        ]]>
    </Rule>
    
    <Rule Uid="AcRaySelected" DisplayName="Ray selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Ray")
        ]]>
    </Rule>
    
	<!-- do not show 'Edit Reference' tab while in view sketch mode -->
    <Rule Uid="AcRefEditInProgress" DisplayName="Reference editing mode" Activate="True" Theme="Cyan" Trigger="SystemVariable">
        <![CDATA[
        !string.IsNullOrEmpty((string)SystemVariables["REFEDITNAME"].Value) && 
		(Autodesk.AutoCAD.ApplicationServices.Application.TryGetSystemVariable("VIEWSKETCHMODE") == null ||
		(short)SystemVariables["VIEWSKETCHMODE"].Value == 0) &&
            (Autodesk.AutoCAD.ApplicationServices.Application.TryGetSystemVariable("TRACEMODE") == null ||
            (short)SystemVariables["TRACEMODE"].Value == 0)
        ]]>
    </Rule>

    <Rule Uid="AcRegionSelected" DisplayName="Region selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Region")
        ]]>
    </Rule>
    
    <Rule Uid="AcSectionSelected" DisplayName="Section selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Section")
        ]]>
    </Rule>
    
    <Rule Uid="AcShapeSelected" DisplayName="Shape selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Shape")
        ]]>
    </Rule>

    <Rule Uid="AcSolidSelected" DisplayName="Solid selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Solid3d")
        ]]>
    </Rule>
    
    <Rule Uid="AcSplineSelected" DisplayName="Spline selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Spline")
        ]]>
    </Rule>


  <Rule Uid="AcExtrudedSurfaceSelected" DisplayName="Surface (Extrusion) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.ExtrudedSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcLoftedSurfaceSelected" DisplayName="Surface (Loft) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.LoftedSurfaceSelected(Selection)
        ]]>
    </Rule>


  <Rule Uid="AcOffsetSurfaceSelected" DisplayName="Surface (Offset) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.OffsetSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcBlendSurfaceSelected" DisplayName="Surface (Blend) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.BlendSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcPatchSurfaceSelected" DisplayName="Surface (Patch) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.PatchSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcFilletSurfaceSelected" DisplayName="Surface (Fillet) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.FilletSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcNetworkSurfaceSelected" DisplayName="Surface (Network) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.NetworkSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcExtendSurfaceSelected" DisplayName="Surface (Extend) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.ExtendSurfaceSelected(Selection)
        ]]>
  </Rule>

  <Rule Uid="AcSweptSurfaceSelected" DisplayName="Surface (Sweep) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.SweptSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcRevolvedSurfaceSelected" DisplayName="Surface (Revolve) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.RevolvedSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcPlanarSurfaceSelected" DisplayName="Surface (Planar) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.PlanarSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcNurbSurfaceSelected" DisplayName="Surface (Nurb) selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.NurbSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcGenericSurfaceSelected" DisplayName="Surface selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            SurfaceRules.Instance.GenericSurfaceSelected(Selection)
        ]]>
    </Rule>

    <Rule Uid="AcTableSelected" DisplayName="Table selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Table")
        ]]>
    </Rule>

    <Rule Uid="AcTableCellSelected" DisplayName="Table cell(s) selected" Activate="True" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.Count==1 && 
        Selection[0].GetProperties()["HasSubSelection"] != null &&
            (bool)(Selection[0].GetProperties()["HasSubSelection"].GetValue(Selection[0]))
        ]]>
    </Rule>
    
    <Rule Uid="AcTestBlockActive" DisplayName="Test Block mode" Activate="True" Theme="Yellow" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["BLOCKTESTWINDOW"].Value) == 1
        ]]>
    </Rule>
    
    <Rule Uid="AcTextEditorInProgress" DisplayName="Text Editor in progress" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["TEXTEDITOR"].Value) == 1
        ]]>
    </Rule>

    <Rule Uid="AcMtextSelected" DisplayName="Text, Multiline selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("MText")
        ]]>
    </Rule>

    <Rule Uid="AcTextSelected" DisplayName="Text, Single Line selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("DBText")
        ]]>
    </Rule>

    <Rule Uid="AcTraceSelected" DisplayName="Trace selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Trace")
        ]]>
    </Rule>
    
    <Rule Uid="AcToleranceSelected" DisplayName="Tolerance selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Tolerance")
        ]]>
    </Rule>

    <Rule Uid="AcViewportSelected" DisplayName="Viewport selected" Theme="Purple" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("Viewport")
        ]]>
    </Rule>

    <Rule Uid="AcWipeoutSelected" DisplayName="Wipeout selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Wipeout")
        ]]>
    </Rule>

    <Rule Uid="AcXLineSelected" DisplayName="Xline selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.ContainsOnly("Xline")
        ]]>
    </Rule>

    <Rule Uid="AcAssocArrayEditInProgress" DisplayName="AssocArray editing state" Activate="True" Theme="Yellow" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["ARRAYEDITSTATE"].Value) == 1
        ]]>
    </Rule>

    <Rule Uid="AcRectangularAssociativeArraySelected" DisplayName="Rectangular Associative Array Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.Count == 1 && Selection.ContainsOnly("BlockReference") && 
            Autodesk.AutoCAD.Internal.Utils.IsAssociativeArrayRibbonContextApplicable("Rectangular", Selection[0].GetProperties()["ObjectId"].GetValue(Selection[0]))
        ]]>
    </Rule>

    <Rule Uid="AcPathAssociativeArraySelected" DisplayName="Path Associative Array Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.Count == 1 && Selection.ContainsOnly("BlockReference") && 
            Autodesk.AutoCAD.Internal.Utils.IsAssociativeArrayRibbonContextApplicable("Path", Selection[0].GetProperties()["ObjectId"].GetValue(Selection[0]))
        ]]>
    </Rule>

    <Rule Uid="AcPolarAssociativeArraySelected" DisplayName="Polar Associative Array Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.Count == 1 && Selection.ContainsOnly("BlockReference") && 
            Autodesk.AutoCAD.Internal.Utils.IsAssociativeArrayRibbonContextApplicable("Polar", Selection[0].GetProperties()["ObjectId"].GetValue(Selection[0]))
        ]]>
    </Rule>

    <!-- Array Creation -->
    <Rule Uid="AcRectangularAssociativeArrayCreation" DisplayName="Rectangular Associative Array Creation" Activate="True" Theme="Green" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["ARRAYCREATION"].Value) == 1
        ]]>
    </Rule>

    <Rule Uid="AcPolarAssociativeArrayCreation" DisplayName="Polar Associative Array Creation" Activate="True" Theme="Green" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["ARRAYCREATION"].Value) == 2
        ]]>
    </Rule>

    <Rule Uid="AcPathAssociativeArrayCreation" DisplayName="Path Associative Array Creation" Activate="True" Theme="Green" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["ARRAYCREATION"].Value) == 3
        ]]>
    </Rule>
	
    <!-- View Sketch Edit property - show 'Parametric' tab in view sketch mode -->
    <Rule Uid="AcSketchViewsEdit" DisplayName="Sketch Views Edit" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
			Autodesk.AutoCAD.ApplicationServices.Application.TryGetSystemVariable("VIEWSKETCHMODE") != null &&
			((short)SystemVariables["VIEWSKETCHMODE"].Value) == 1
        ]]>
    </Rule>	

    <Rule Uid="AcPointCloudSelected" DisplayName="Point Cloud selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("PointCloud")
        ]]>
    </Rule>

    <Rule Uid="AcPointCloudExSelected" DisplayName="Point Cloud Extension Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnly("PointCloudEx")
        ]]>
    </Rule>

    <Rule Uid="AcCoordinationModelSelected" DisplayName="Coordination Model Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnlyCoordinationModel()
        ]]>
    </Rule>

    <Rule Uid="AcBlockWithSolidOrSurfaceSelected" DisplayName="Block With Solid Or Surface Selected" Theme="Green" Trigger="Selection">
        <![CDATA[
            Selection.Count == 1 && Selection.ContainsOnly("BlockReference") && 
            SurfaceRules.Instance.BlockWithSolidOrSurfaceSelected(Selection[0].GetProperties()["ObjectId"].GetValue(Selection[0]))
        ]]>
    </Rule>

    <Rule Uid="AcLayoutSelected" DisplayName="Layout Selected" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["TILEMODE"].Value) == 0 && 
         null != Autodesk.AutoCAD.ApplicationServices.Application.DocumentManager.MdiActiveDocument
        ]]>
    </Rule>

    <!-- Touch Mode enabled -->
    <Rule Uid="AcTouchModeEnabled" DisplayName="Touch Mode Enabled" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
        ((short)SystemVariables["TOUCHMODE"].Value) == 1 &&
        ((short)SystemVariables["MAXTOUCHES"].Value) >= 2
        ]]>
    </Rule>

	 <Rule Uid="AcGeoCoordSysAssigned" DisplayName="Geo Coordinate System Assigned" Activate="True" Theme="Blue" Trigger="SystemVariable">
        <![CDATA[
         !string.IsNullOrEmpty((string)SystemVariables["CGEOCS"].Value) && 
         (bool)Autodesk.AutoCAD.ApplicationServices.Application.UIBindings.GeoData.IsGeoCsSupported
        ]]>
    </Rule>
	
    <Rule Uid="AcGeoMapImageSelected" DisplayName="Map Image selected" Activate="True" Theme="Cyan" Trigger="Selection">
        <![CDATA[
        Selection.ContainsOnlyGeoMapImage()
        ]]>
    </Rule>

</TabSelectorRules>
